<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.theater.mapper.MovieMapper">

 <sql id="criteria">
  <trim prefix="(" suffix=") AND" prefixOverrides="OR">
    <foreach item="type" collection="typeArr">
            <!-- Criteria->이름 같으면 getTypeArr(자동 호출) 실행 -->
      <trim prefix="OR">
        <choose>
          <when test="type== 'T'.toString()">
            title like '%'||#{keyword}||'%'
          </when>
          <when test="type== 'C'.toString()">
            intro like '%'||#{keyword}||'%'
          </when>
        </choose>
      </trim>
    </foreach>
  </trim>
</sql>

  <!-- 영화 insert -->
  <insert id="movieInsertPro">
  <selectKey keyProperty="m_cd" order="BEFORE" resultType="int">
        select m_cd_seq.nextval from dual
      </selectKey>
    insert into movies (m_cd, title, subtitle, rdate, rtime, rate, intro, poster) values (#{m_cd}, #{title}, #{subtitle}, to_date(#{rdate},'YYYY-MM-DD'), #{rtime},#{rate},#{intro}, #{poster})
  </insert> 
  
  <select id="movieListPaging" resultType="com.theater.domain.MovieVO">
  <![CDATA[
        SELECT *
        FROM ( SELECT ROWNUM RN,
                A.*
              FROM (SELECT * FROM MOVIES
                    WHERE
        ]]> 
                    <if test="searchType == 'title'">TITLE LIKE '%'||#{searchName}||'%'</if>
                    <if test="searchType == 'intro'">INTRO LIKE '%'||#{searchName}||'%'</if>
                    <if test="searchType == null or searchType == ''"> 1=1</if>
        <![CDATA[
                    ORDER BY M_CD DESC) A)
        WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount}
        ]]>

  </select>
  
  <select id="read" resultType="com.theater.domain.MovieVO">
    select * from movies where m_cd = #{m_cd} 
  </select>
  
  <select id="nextPage" resultType="com.theater.domain.MovieVO">
    <![CDATA[
      select * from movies where m_cd < #{m_cd} and rownum=1 order by m_cd desc
    ]]>
  </select>
  
  <select id="prevPage" resultType="com.theater.domain.MovieVO">
    <![CDATA[
      select * from movies where m_cd > #{m_cd} and rownum=1 order by m_cd asc
    ]]>
  </select>
  
<!--   <select id="movieList" resultType="com.theater.domain.MovieVO"> -->
<!--     <![CDATA[ -->
<!--     select * from  -->
<!--     (  -->
<!--       select /*+ index_desc(movies SYS_C007998) */ rownum rn, M_CD,TITLE,SUBTITLE,RDATE,RTIME,RATE,INTRO,POSTER from Movies -->
<!--       where  -->
<!--     ]]> -->
<!--     <include refid="criteria"/> -->
<!--     <![CDATA[ -->
<!--       rownum <= #{pageNum} * #{amount} -->
<!--     )  -->
<!--     where rn > (#{pageNum}-1) * #{amount} -->
<!--     ]]> -->
<!--   </select> -->
  
  <select id="getTotal" resultType="int">
  SELECT COUNT(*) AS TOTAL FROM MOVIES
  WHERE  <if test="searchType == 'title'">TITLE LIKE '%'||#{searchName}||'%'</if>
         <if test="searchType == 'intro'">INTRO LIKE '%'||#{searchName}||'%'</if>
         <if test="searchType == null or searchType == ''"> 1=1</if>
</select>
  
  
  <!-- View 페이지 -->
  <select id="movieSelect" resultType="com.theater.domain.MovieVO">
    select * from movies order by m_cd desc
  </select>
  
  <insert id="movieInfoInsertPro">
    insert all 
      into M_ACTORS (m_a_cd,m_cd,a_cd) values (m_a_cd_seq.nextval,#{m_cd},#{a_cd}) 
      into M_DIRECTORS (M_D_CD,M_CD,D_CD) values (m_d_cd_seq.nextval,#{m_cd},#{d_cd}) 
      into M_GENRES (M_G_CD,M_CD,G_CD) values (m_g_cd_seq.nextval,#{m_cd},#{g_cd}) 
      into M_NATIONS(M_N_CD,M_CD,N_CD) values (m_n_cd_seq.nextval,#{m_cd},#{n_cd}) 
      into M_STILLCUT(STILL_CD,M_CD,STILL_IMG1,STILL_IMG2,STILL_IMG3,STILL_IMG4) values(STILLCUT_SEQ.nextval,#{m_cd},#{still_img1},#{still_img2},#{still_img3},#{still_img4})
    select * from sys.dual
  </insert>
  
  <select id="adminMovieSelect" resultType="com.theater.domain.MovieSelectVO">
  
  select a.a_cd as a_cd, a.a_name as a_name, a.a_img as a_img,d.d_cd as d_cd, d.d_name as d_name, d.d_img as d_img, n.n_cd as n_cd,n.n_name as n_name,g.g_cd as g_cd,g.g_name as g_name,m.m_cd as m_cd,title,subtitle,rdate,rtime,rate,intro,poster
  from movies m, m_actors ma, actors a, m_directors md, directors d,m_nations mn, nations n,m_genres mg,genres g
  where m.m_cd = ma.m_cd and ma.a_cd = a.a_cd and m.m_cd = md.m_cd and md.d_cd = d.d_cd and m.m_cd = mn.m_cd and mn.n_cd = n.n_cd and m.m_cd=mg.m_cd and mg.g_cd = g.g_cd
  and m.m_cd=#{m_cd}
  
  </select>
  
 <select id="movieStillcutSelect" resultType="com.theater.domain.M_stillcutVO">
  select * from M_stillcut where m_cd=#{m_cd}
 </select>
 
 <delete id="movieDelete">
  delete from movies m_cd=#{m_cd}
 </delete>
 
 
 <insert id="movieReviewInsert">
  insert into review (rcode,review,rwriter,rgrade,m_cd,rdate) values(rcode_seq.nextval,#{review},#{rwriter},#{rgrade},#{m_cd},sysdate)
 </insert>
 
 <select id="movieReviewRead" resultType="com.theater.domain.ReviewVO">
  select * from review where m_cd=#{m_cd} order by rcode desc
 </select>
 
 <delete id="movieReviewDelete">
  delete from review where rcode=#{rcode}
 </delete>
 
 <update id="moviewReviewUpdate">
  update from review set review =#{review}, rdate = sysdate where rcode =#{rcode}
 </update>
 
 <select id="getListWithPageing">
  select rcode,m_cd,review,rwriter,rdate from review where m_cd=#{m_cd} order by rcode asc
 </select>
 
 <select id="cmtAVG" resultType="com.theater.domain.CmtAVG">
   select
  (SELECT ROUND(AVG(rgrade),1) as rgrade
  from review
  where m_cd = #{m_cd}) as reviewavg
  ,(select count(rcode) from review where m_cd = #{m_cd}) as reviewcount
  from dual
  
  
 </select>
 
 <select id="movieSelect1to5" resultType="com.theater.domain.MovieVO">
  
 SELECT * FROM  (SELECT ROWNUM AS NUM, movies.* FROM movies order by m_cd desc)
  WHERE  NUM BETWEEN 1 AND 5
  
 </select>
 
 <select id="movieSelect6to10" resultType="com.theater.domain.MovieVO">
 SELECT * FROM  (SELECT ROWNUM AS NUM1, movies.* FROM movies order by m_cd desc)
  WHERE NUM1 BETWEEN 6 AND 10
 </select>
 
 <select id="movieSelect11to15" resultType="com.theater.domain.MovieVO">
SELECT * FROM  (SELECT ROWNUM AS NUM2, movies.* FROM movies order by m_cd desc)
  WHERE NUM2 BETWEEN 11 AND 15
 </select>
 
 <select id="movieChart" resultType="com.theater.domain.MovieChartVO">s
  select m.m_cd as m_cd, t.tkt_cd as t_cd, b.gender, b.birth, t.id, b.userid, t.m_cd as t_m_cd
from movies m,ticketings t,members b
where m.m_cd =t.m_cd and t.id=b.userid and m.m_cd=#{m_cd}
 </select>
 
 <select id="getChart1" resultType="com.theater.domain.MovieChartVO">
   SELECT AGE , COUNT(*) AS AGEGROUP
  FROM(
  SELECT FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(BIRTH))/120)*10 AS AGE
  FROM TICKETINGS t , MEMBERS m 
  WHERE t.ID = m.USERID 
  AND t.M_CD = #{m_cd}
  )GROUP BY AGE ORDER BY 1
</select>

<select id="getChart2" resultType="com.theater.domain.MovieChartVO">
  SELECT *
  FROM
    (select COUNT(*) AS MEN
       from ticketings t, members m
      where t.id =m.userid  
      and gender ='1'
      and t.M_CD =#{m_cd}
    ),
    (select COUNT(*) AS WOMEN
       from ticketings t, members m
      where t.id =m.userid  
      and gender ='2'
      and t.M_CD =#{m_cd}
    )
</select>
 
 <select id="movieFilmsSelect" resultType="com.theater.domain.FilmsVO">
    select * from films
 </select>
 
 <select id="movieFilmsSelect2" resultType="com.theater.domain.FilmsVO">
    select * from films where m_cd=#{m_cd}
 </select>
 
<update id="moviefilmsUpdate">
update films set
FILM_STATUS = #{film_status}
where m_cd = #{m_cd}
 </update>
</mapper>
